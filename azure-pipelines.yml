# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'macOS-latest'

variables:
  KATALON_BUNDLE_CLASSES: katalon_classes
  JACOCO_REPORT_DIR: jacoco_report
  JACOCO_TOOLS_DIR: tools/jacoco
  SONAR_TOOLS_DIR: tools/sonar-scanner/bin
  KRE_DOWNLOAD_LINK: https://github.com/katalon-studio/katalon-studio/releases/download/v7.2.3/Katalon_Studio_Engine_MacOS-7.2.3.tar.gz

steps:
- script: brew install coreutils
  displayName: 'Install coreutils'

- script: |
    mkdir $KATALON_BUNDLE_CLASSES
    mkdir $JACOCO_REPORT_DIR
  displayName: 'Create common directories'

- script: |
    curl "$KRE_DOWNLOAD_LINK" -o "katalon_runtime_engine.tar.gz" -L 
    tar -xzvf katalon_runtime_engine.tar.gz
    rm katalon_runtime_engine.tar.gz
  displayName: 'Download KRE'

- script: |
    export JAR_DIR=$(realpath "Katalon_Studio_Engine_MacOS-7.2.3/Katalon Studio Engine.app/Contents/Eclipse/plugins")
    export OUTPUT_DIR=$(realpath $KATALON_BUNDLE_CLASSES)   
    ./tools/extract-katalon-bundles.sh "$JAR_DIR" "$OUTPUT_DIR"
  displayName: 'Extract Katalon bundle jar files'

- script: |
    export SETTINGS_DIR=$(realpath settings/internal)
    export REPORT_FILE=$(realpath $JACOCO_REPORT_DIR/jacoco.exec)
    export JACOCOAGENT=$(realpath $JACOCO_TOOLS_DIR/lib/jacocoagent.jar)
    touch $REPORT_FILE
    ./tools/inject-jacocoagent.sh "$SETTINGS_DIR" "$JACOCOAGENT" "$REPORT_FILE"
    cat $SETTINGS_DIR/com.kms.katalon.execution.setting.properties
  displayName: 'Inject Jacoco agent for execution'

- script: |
    export PROJECT_PATH=$(realpath web-samples.prj)
    cd "Katalon_Studio_Engine_MacOS-7.2.3/Katalon Studio Engine.app/Contents/MacOS"
    ./katalonc -noSplash -runMode=console -projectPath="$PROJECT_PATH" -retry=0 -testSuitePath="Test Suites/WebUI Builtin Keywords Test" -executionProfile="default" -browserType="Chrome" -apiKey="0d954e41-886c-4532-b12f-b04a06f84ff0"
  displayName: 'Execute tests'

- script: |
    export JACOCO_EXEC_FILE=$(realpath $JACOCO_REPORT_DIR/jacoco.exec)
    export XML_REPORT_FILE=$(realpath $JACOCO_REPORT_DIR/jacoco.xml)
    export JACOCOCLI=$JACOCO_TOOLS_DIR/lib/jacococli.jar
    touch $XML_REPORT_FILE
    java -jar $JACOCOCLI report $JACOCO_EXEC_FILE --classfiles $KATALON_BUNDLE_CLASSES --xml $XML_REPORT_FILE
  displayName: 'Generate XML coverage report'